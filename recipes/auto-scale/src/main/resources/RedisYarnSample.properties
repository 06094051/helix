###############################################################################
# Managed cluster configuration
###############################################################################

cluster.name                      = rediscluster
cluster.address                   = helix.zookeeper.intra

#
# Helix cluster resources
# (as usual)
#
resource.0.name                   = redis
resource.0.cluster                = rediscluster
resource.0.address                = helix.zookeeper.intra
resource.0.container              = rediscontainer           # see meta cluster
resource.0.model                  = OnlineOffline
resource.0.partitions             = 1024                     # are auto-assigned
resource.0.replica                = 1                        # no replication needed

#
# Helix cluster controllers
# (as usual)
#
controller.name                   = controller
controller.cluster                = rediscluster
controller.address                = helix.zookeeper.intra

###############################################################################
# Meta cluster configuration
###############################################################################

metacluster.name                  = meta
metacluster.address               = helix.zookeeper.intra
metacluster.managedcluster        = rediscluster
metacluster.managedaddress        = helix.zookeeper.intra

#
# Container Types
# (Base configuration for instances spawned by providers)
#
metaresource.0.name               = rediscontainer
metaresource.0.class              = org.apache.helix.autoscale.impl.container.RedisServerProcess
metaresource.0.metacluster        = meta
metaresource.0.metaaddress        = helix.zookeeper.intra
metaresource.0.address            = apps.zookeeper.intra
metaresource.0.baseport           = 17000                    # instance id is added

#
# Container Instance Providers
# (Endpoints of container deployment frameworks, e.g. Apache YARN)
#
metaprovider.0.name               = provider
metaprovider.0.class              = org.apache.helix.autoscale.impl.yarn.YarnContainerProviderProcess
metaprovider.0.metacluster        = meta
metaprovider.0.metaaddress        = helix.zookeeper.intra
metaprovider.0.yarndata           = yarn.zookeeper.intra
metaprovider.0.resourcemananger   = yarn-rm.intra:8032
metaprovider.0.scheduler          = yarn-rm.intra:8030
metaprovider.0.hdfs               = hdfs://yarn-hdfs.intra:9000/
metaprovider.0.user               = yarnuser

#
# Helix meta cluster controller
# (Monitors system state and adapts config of Container Instance Providers)
#
metacontroller.name               = metacontroller
metacontroller.metacluster        = meta
metacontroller.metaddress         = helix.zookeeper.intra
metacontroller.autorefresh        = 10000                    # status refresh interval

#
# Container Status Provider
# (Provides low-level data on container instance health)
#
metacontroller.status.class       = org.apache.helix.autoscale.impl.yarn.YarnStatusProvider
metacontroller.status.yarndata    = yarn.zookeeper.intra

#
# Performance Target Model
# (Provides target number of container instances)
#
metacontroller.target.class       = org.apache.helix.autoscale.impl.RedisTargetProvider
metacontroller.target.address     = apps.zookeeper.intra
metacontroller.target.interval    = 10000                    # interval for Tps probes
metacontroller.target.timeout     = 9000                     # timeout of probe
metacontroller.target.get         = 1000000                  # target "GET" Tps
metacontroller.target.min         = 1                        # min container count
metacontroller.target.max         = 23                       # max container count
metacontroller.target.alpha       = 0.1                      # exponential average